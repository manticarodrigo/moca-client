diff --git a/node_modules/react-native-calendars/src/calendar/header/index.js b/node_modules/react-native-calendars/src/calendar/header/index.js
index 0d7be61..835d0e1 100644
--- a/node_modules/react-native-calendars/src/calendar/header/index.js
+++ b/node_modules/react-native-calendars/src/calendar/header/index.js
@@ -19,6 +19,7 @@ class CalendarHeader extends Component {
     showIndicator: PropTypes.bool,
     firstDay: PropTypes.number,
     renderArrow: PropTypes.func,
+    renderHeader: PropTypes.func,
     hideDayNames: PropTypes.bool,
     weekNumbers: PropTypes.bool,
     onPressArrowLeft: PropTypes.func,
@@ -65,6 +66,9 @@ class CalendarHeader extends Component {
     if (nextProps.monthFormat !== this.props.monthFormat) {
       return true;
     }
+    if (nextProps.renderHeader !== this.props.renderHeader) {
+      return true;
+    }
     return false;
   }
 
@@ -128,18 +132,28 @@ class CalendarHeader extends Component {
       indicator = <ActivityIndicator color={this.props.theme && this.props.theme.indicatorColor}/>;
     }
 
+    const monthString = this.props.month.toString(this.props.monthFormat);
+
+    let header = (
+      <View style={this.style.header}>
+        {leftArrow}
+        <View style={{ flexDirection: 'row' }}>
+          <Text allowFontScaling={false} style={this.style.monthText} accessibilityTraits='header'>
+            {monthString}
+          </Text>
+          {indicator}
+        </View>
+        {rightArrow}
+      </View>
+    );
+
+    if (this.props.renderHeader) {
+      header = this.props.renderHeader(this.onPressLeft, this.onPressRight, monthString, indicator);
+    }
+
     return (
       <View style={this.props.style}>
-        <View style={this.style.header}>
-          {leftArrow}
-          <View style={{ flexDirection: 'row' }}>
-            <Text allowFontScaling={false} style={this.style.monthText} accessibilityTraits='header'>
-              {this.props.month.toString(this.props.monthFormat)}
-            </Text>
-            {indicator}
-          </View>
-          {rightArrow}
-        </View>
+        {header}
         {
           !this.props.hideDayNames &&
           <View style={this.style.week}>
diff --git a/node_modules/react-native-calendars/src/calendar/index.js b/node_modules/react-native-calendars/src/calendar/index.js
index fd3a39c..b547dce 100644
--- a/node_modules/react-native-calendars/src/calendar/index.js
+++ b/node_modules/react-native-calendars/src/calendar/index.js
@@ -60,6 +60,8 @@ class Calendar extends Component {
     onVisibleMonthsChange: PropTypes.func,
     /** Replace default arrows with custom ones (direction can be 'left' or 'right') */
     renderArrow: PropTypes.func,
+    /** Replace default header with custom one (receives 'onPressLeft', 'onPressRight', 'monthString', and 'indicator') */
+    renderHeader: PropTypes.func,
     /** Provide custom day rendering component */
     dayComponent: PropTypes.any,
     /** Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting */
@@ -267,6 +269,7 @@ class Calendar extends Component {
           showIndicator={indicator}
           firstDay={this.props.firstDay}
           renderArrow={this.props.renderArrow}
+          renderHeader={this.props.renderHeader}
           monthFormat={this.props.monthFormat}
           hideDayNames={this.props.hideDayNames}
           weekNumbers={this.props.showWeekNumbers}
diff --git a/node_modules/react-native-calendars/src/calendar/updater.js b/node_modules/react-native-calendars/src/calendar/updater.js
index 366881e..6ded868 100644
--- a/node_modules/react-native-calendars/src/calendar/updater.js
+++ b/node_modules/react-native-calendars/src/calendar/updater.js
@@ -12,7 +12,7 @@ export default function shouldComponentUpdate(nextProps, nextState) {
     return prev;
   }, {update: false});
 
-  shouldUpdate = ['markedDates', 'hideExtraDays'].reduce((prev, next) => {
+  shouldUpdate = ['displayLoadingIndicator', 'markedDates', 'hideExtraDays'].reduce((prev, next) => {
     if (!prev.update && nextProps[next] !== this.props[next]) {
       return {
         update: true,
